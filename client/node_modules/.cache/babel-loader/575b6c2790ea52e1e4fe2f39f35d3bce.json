{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Ryan F Wilson\\\\magicwizard\\\\client\\\\src\\\\pages\\\\Cards.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Cards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [],\n      name: \"\",\n      manaCost: \"\",\n      cardDescription: \"\"\n    };\n\n    this.loadCards = () => {\n      API.getCards().then(res => this.setState({\n        cards: res.data,\n        name: \"\",\n        manaCost: \"\",\n        cardDescription: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteCard = id => {\n      API.deleteCard(id).then(res => this.loadCards()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.name && this.state.manaCost) {\n        API.saveCard({\n          name: this.state.name,\n          manaCost: this.state.manaCost,\n          cardDescription: this.state.cardDescription\n        }).then(res => this.loadCards()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadCards();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"What Cards Should I Use?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      name: \"name\",\n      placeholder: \"Name (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.manaCost,\n      onChange: this.handleInputChange,\n      name: \"manaCost\",\n      placeholder: \"ManaCost (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      value: this.state.cardDescription,\n      onChange: this.handleInputChange,\n      name: \"cardDescription\",\n      placeholder: \"CardDescription (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      disabled: !(this.state.manaCost && this.state.name),\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit Card\"))), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Cards On My List\")), this.state.cards.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.cards.map(card => React.createElement(ListItem, {\n      key: card._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/cards/\" + card._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, card.name, \" by \", card.manaCost)), React.createElement(DeleteBtn, {\n      onClick: () => this.deleteCard(card._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["c:/Users/Ryan F Wilson/magicwizard/client/src/pages/Cards.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Cards","state","cards","name","manaCost","cardDescription","loadCards","getCards","then","res","setState","data","catch","err","console","log","deleteCard","id","handleInputChange","event","target","value","handleFormSubmit","preventDefault","saveCard","componentDidMount","render","length","map","card","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,MAAMC,KAAN,SAAoBb,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5Bc,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,eAAe,EAAE;AAJX,KADoB;;AAAA,SAY5BC,SAZ4B,GAYhB,MAAM;AAChBhB,MAAAA,GAAG,CAACiB,QAAJ,GACGC,IADH,CACQC,GAAG,IACP,KAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO,GAAG,CAACE,IAAb;AAAmBR,QAAAA,IAAI,EAAE,EAAzB;AAA6BC,QAAAA,QAAQ,EAAE,EAAvC;AAA2CC,QAAAA,eAAe,EAAE;AAA5D,OAAd,CAFJ,EAIGO,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,KAlB2B;;AAAA,SAoB5BG,UApB4B,GAoBfC,EAAE,IAAI;AACjB3B,MAAAA,GAAG,CAAC0B,UAAJ,CAAeC,EAAf,EACGT,IADH,CACQC,GAAG,IAAI,KAAKH,SAAL,EADf,EAEGM,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,KAxB2B;;AAAA,SA0B5BK,iBA1B4B,GA0BRC,KAAK,IAAI;AAAA,4BACHA,KAAK,CAACC,MADH;AAAA,YACnBjB,IADmB,iBACnBA,IADmB;AAAA,YACbkB,KADa,iBACbA,KADa;AAE3B,WAAKX,QAAL,CAAc;AACZ,SAACP,IAAD,GAAQkB;AADI,OAAd;AAGD,KA/B2B;;AAAA,SAiC5BC,gBAjC4B,GAiCTH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACI,cAAN;;AACA,UAAI,KAAKtB,KAAL,CAAWE,IAAX,IAAmB,KAAKF,KAAL,CAAWG,QAAlC,EAA4C;AAC1Cd,QAAAA,GAAG,CAACkC,QAAJ,CAAa;AACXrB,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADN;AAEXC,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFV;AAGXC,UAAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWI;AAHjB,SAAb,EAKGG,IALH,CAKQC,GAAG,IAAI,KAAKH,SAAL,EALf,EAMGM,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD;AACF,KA5C2B;AAAA;;AAQ5BY,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,SAAL;AACD;;AAoCDoB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWE,IADpB;AAEE,MAAA,QAAQ,EAAE,KAAKe,iBAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKc,iBAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWI,eADpB;AAEE,MAAA,QAAQ,EAAE,KAAKa,iBAFjB;AAGE,MAAA,IAAI,EAAC,iBAHP;AAIE,MAAA,WAAW,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAmBE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,EAAE,KAAKjB,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWE,IAApC,CADZ;AAEE,MAAA,OAAO,EAAE,KAAKmB,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBF,CAJF,CADF,EAgCE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIG,KAAKrB,KAAL,CAAWC,KAAX,CAAiByB,MAAjB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK1B,KAAL,CAAWC,KAAX,CAAiB0B,GAAjB,CAAqBC,IAAI,IACxB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAYD,IAAI,CAACC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAAC1B,IADR,UACkB0B,IAAI,CAACzB,QADvB,CADF,CADF,EAME,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAM,KAAKY,UAAL,CAAgBa,IAAI,CAACC,GAArB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,CADH,CADD,GAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAlBJ,CAhCF,CADF,CADF;AA0DD;;AAzG2B;;AA4G9B,eAAe9B,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass Cards extends Component {\r\n  state = {\r\n    cards: [],\r\n    name: \"\",\r\n    manaCost: \"\",\r\n    cardDescription: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadCards();\r\n  }\r\n\r\n  loadCards = () => {\r\n    API.getCards()\r\n      .then(res =>\r\n        this.setState({ cards: res.data, name: \"\", manaCost: \"\", cardDescription: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteCard = id => {\r\n    API.deleteCard(id)\r\n      .then(res => this.loadCards())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.name && this.state.manaCost) {\r\n      API.saveCard({\r\n        name: this.state.name,\r\n        manaCost: this.state.manaCost,\r\n        cardDescription: this.state.cardDescription\r\n      })\r\n        .then(res => this.loadCards())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Cards Should I Use?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.name}\r\n                onChange={this.handleInputChange}\r\n                name=\"name\"\r\n                placeholder=\"Name (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.manaCost}\r\n                onChange={this.handleInputChange}\r\n                name=\"manaCost\"\r\n                placeholder=\"ManaCost (required)\"\r\n              />\r\n              <TextArea\r\n                value={this.state.cardDescription}\r\n                onChange={this.handleInputChange}\r\n                name=\"cardDescription\"\r\n                placeholder=\"CardDescription (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.manaCost && this.state.name)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit Card\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Cards On My List</h1>\r\n            </Jumbotron>\r\n            {this.state.cards.length ? (\r\n              <List>\r\n                {this.state.cards.map(card => (\r\n                  <ListItem key={card._id}>\r\n                    <Link to={\"/cards/\" + card._id}>\r\n                      <strong>\r\n                        {card.name} by {card.manaCost}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => this.deleteCard(card._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}